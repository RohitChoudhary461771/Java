â­• Types of method in java 
      -> Instance Method / Non static method.
      -> Staic Method.
      -> Instance Factory Method.
      -> Abstract Method.


Method calling in java.

      Insatance -- directly/obj--> Instance method.
      Insatance -- className--> static method.
      Static   -- directly/obj--> Static method.
      Static   --Object--> Instance Method.

-------------------------------------------  Code  --------------------------------------------------------------------

class HelloWorld {
    public static void main(String[] args) {

      //ðŸ‘‰  static --drectly-->static method
        print();

      //ðŸ‘‰   static --object--> instance method.

        HelloWorld obj=new HelloWorld();
        obj.print1();
    }
    
    static void print(){
        System.out.println("Hello how are you");
    }

    void print1(){
        System.out.println("I am fine what about you");

  //ðŸ‘‰  instance --directly-->instance method
        print2();
    }

    void print2(){
        System.out.println("I am also good");

  //ðŸ‘‰  instance --className-->static method
        HelloWorld.print3();
    }
    
    static void print3(){
        System.out.println("So what is the plan now");
    }
}

************************Detail code for static method calling ********************************************
class HelloWorld {
    public static void main(String[] args) {
       //ðŸ‘‰static method direct calling.
        int ans=Add(8,9);
    
      //ðŸ‘‰static method  calling using object.
    
        HelloWorld obj1 =new HelloWorld();
        int ans1=obj1.Add(9,9);
    
      //ðŸ‘‰static method  calling using class name.

        int ans2=HelloWorld.Add(10,9);
        
        System.out.println(ans2);
    }

//Method 
    static int Add(int a ,int b){
        int c=a+b;
        return c;
    }
}

**************************X*********************************************************X************************************

â­• Blocks in java.
      ->Instance Block.-- Instance block is used to initialize instance variables.
      ->Static Block.--- Static block is also used to initialize variables and is excuted before main method.

**************************X*********************************************************X************************************

â­• Constructor 
      -> It is a special method in java use to initialize objects.
      -> By default it is implicitly Called at the time of object creation.
      -> It can called explicilty also that is by programmer at run time.
      -> It can be Parametrized or non-paramerized.
      -> this key word is used for constructor chaining. For constructor chaining this keyword must be the first statement in constructor.
      -> Constructor can also be private ,private constructor can be excess within the class. To excess private constructor by another class
          we have to use static factory method /instance fatory method

-------------------------------------------  Code  --------------------------------------------------------------------

class constructor{
//ðŸ‘‰ Default constructor
    constructor(){
        System.out.print("Hi");
    }
//ðŸ‘‰ Parametrized Constructor
    constructor(int a){
        this(); //ðŸŽ¯constructor chaining,call above constructor (â¬†) first 
        System.out.print(a);
    }
//ðŸ‘‰ Instance Block 
    {
        System.out.print("Mi");
    }
//ðŸ‘‰ Static Block
    static{
        System.out.print("SBlock");
    }
    public static void main(String args[]){
        
        constructor obj2=new constructor(100);
    }
}
-------------------------------------------------------------------------------------------------------------------------

â­• OOP's (Object Oriented programming)
    --> Java is not a pure object orinteted programming language because of the presence of Primitive data type(8)
      (int,float,char,boolean,double,byte,short,long)

    --> four pillar's of OOP's.
        --> Inheritance
        --> Polymorphism.
        --> Encapsulation.
        --> Abstraction.

-------------------------  Inheritance -------------------------------------------------------------------

ðŸ”¹Inheritance is a property in which one class can aquire all the property of another class.
  Inheritance also called (IS-A) realtion.

      [class] -->parent/super/base
        â©‘
        |        (child class inheriting all the property of parent class)
        |
      [class}  --> child/sub/Derived class

  Types of Inheritance
    1.Single inheritance.
    2.Hierarchichal inheritance.
    3.Multiple iheritance. (not supported in java)
    4.Hybrid Inheritance.  (not supported in java)
    5.Multilevel Inheritance





